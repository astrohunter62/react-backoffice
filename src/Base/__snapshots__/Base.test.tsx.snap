// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Base renders correctly 1`] = `
<WithBase
  hasCookieInfo={true}
  menuData={
    Array [
      Object {
        "title": "Dashboard",
        "type": "link",
        "url": "/",
      },
      Object {
        "isDisabled": true,
        "title": "New portfolio",
        "type": "link",
        "url": "/portfolio",
      },
      Object {
        "type": "divider",
      },
      Object {
        "icon": <React.Fragment>
          <UNDEFINED />
        </React.Fragment>,
        "title": "Report a bug",
        "type": "link",
        "url": "/bug",
      },
    ]
  }
  menuOpen={true}
  title="Foo"
>
  <div>
    Foo
  </div>
</WithBase>
`;

exports[`Base renders correctly without header 1`] = `
<WithBase
  hasCookieInfo={true}
  hasHeader={false}
  menuData={
    Array [
      Object {
        "title": "Dashboard",
        "type": "link",
        "url": "/",
      },
      Object {
        "isDisabled": true,
        "title": "New portfolio",
        "type": "link",
        "url": "/portfolio",
      },
      Object {
        "type": "divider",
      },
      Object {
        "icon": <React.Fragment>
          <UNDEFINED />
        </React.Fragment>,
        "title": "Report a bug",
        "type": "link",
        "url": "/bug",
      },
    ]
  }
  menuOpen={true}
  title="Foo"
>
  <div>
    Foo
  </div>
</WithBase>
`;

exports[`Base renders with drawer open 1`] = `
<WithBase
  hasCookieInfo={true}
  hasHeader={false}
  menuData={
    Array [
      Object {
        "title": "Dashboard",
        "type": "link",
        "url": "/",
      },
      Object {
        "isDisabled": true,
        "title": "New portfolio",
        "type": "link",
        "url": "/portfolio",
      },
      Object {
        "type": "divider",
      },
      Object {
        "icon": <React.Fragment>
          <UNDEFINED />
        </React.Fragment>,
        "title": "Report a bug",
        "type": "link",
        "url": "/bug",
      },
    ]
  }
  menuOpen={true}
  title="Foo"
>
  <div>
    Foo
  </div>
</WithBase>
`;
