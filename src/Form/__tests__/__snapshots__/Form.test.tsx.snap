// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "key": "kjpl0b",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "key": "kjpl0b",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Form
    data={
      Object {
        "id": Object {
          "value": "test-id",
        },
        "text": Object {
          "value": "prefilled text-field",
        },
      }
    }
    form={
      Array [
        Object {
          "data": Array [
            Object {
              "id": "text",
              "isRequired": true,
              "title": "Text Field",
              "type": "text",
              "width": "small",
            },
            Object {
              "id": "select.first",
              "isRequired": true,
              "options": Array [
                "Foo",
                "Bar",
                "Baz",
              ],
              "title": "Select",
              "type": "select",
              "width": "small",
            },
            Object {
              "id": "select.second",
              "isRequired": true,
              "options": Array [
                "Foo",
                "Bar",
                "Baz",
              ],
              "title": "Select",
              "type": "select",
              "width": "small",
            },
            Object {
              "id": "number",
              "isRequired": true,
              "title": "Number",
              "type": "number",
              "value": 10,
              "width": "small",
            },
            Object {
              "id": "multiline",
              "rows": 5,
              "title": "Multiline",
              "type": "multiline",
            },
            Object {
              "data": Array [
                Object {
                  "iconEnd": <Memo(VisibilityIcon) />,
                  "id": "nested-text",
                  "title": "Nested Text",
                  "type": "text",
                  "width": "mid",
                },
                Object {
                  "id": "empty",
                  "type": "empty",
                  "width": "mid",
                },
              ],
              "group": true,
              "id": "nested",
              "integrated": true,
              "isVisible": true,
              "title": "Nested Form",
            },
            Object {
              "content": <React.Fragment>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  Content
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Divider)) />
              </React.Fragment>,
              "id": "content",
              "type": "content",
            },
            Object {
              "id": "email",
              "onBeforeSubmit": [Function],
              "title": "Email",
              "type": "email",
              "width": "mid",
            },
            Object {
              "id": "password",
              "title": "Password",
              "type": "password",
              "width": "mid",
            },
            Object {
              "helperText": "Should be URL with trailing slash",
              "id": "url",
              "title": "URL",
              "type": "url",
              "validators": Array [
                Object {
                  "message": "Please add a trailing slash to your URL",
                  "validator": [Function],
                },
              ],
              "width": "mid",
            },
            Object {
              "id": "empty",
              "type": "email",
              "width": "mid",
            },
          ],
          "group": true,
          "id": "base",
          "title": "Form",
        },
        Object {
          "data": Array [
            Object {
              "format": "DD.MM.YYYY",
              "id": "date",
              "title": "Date",
              "type": "date",
              "validators": Array [
                "date",
              ],
              "value": 1514989682669,
              "width": "small",
            },
            Object {
              "format": "hh:mm a",
              "id": "time",
              "title": "Time",
              "type": "time",
              "validators": Array [
                "date",
              ],
              "value": 1514989682669,
              "width": "small",
            },
            Object {
              "format": "DD.MM.YYYY, hh:mm a",
              "id": "datetime",
              "title": "Datetime",
              "type": "datetime",
              "validators": Array [
                "date",
              ],
              "value": 1514989682669,
              "width": "small",
            },
          ],
          "group": true,
          "id": "date",
          "title": "Form - Date",
        },
        Object {
          "data": Array [
            Object {
              "id": "disabled",
              "isDisabled": true,
              "title": "Disabled Text",
              "type": "text",
              "width": "mid",
            },
            Object {
              "id": "disabled-select",
              "isDisabled": true,
              "options": Array [
                "Foo",
                "Bar",
                "Baz",
              ],
              "title": "Disabled Select",
              "type": "select",
              "width": "mid",
            },
          ],
          "group": true,
          "id": "disabled",
          "title": "Form - Disabled fields",
        },
        Object {
          "data": Array [
            Object {
              "helperText": "Display Helper Text",
              "id": "switch",
              "title": "Switch",
              "type": "switch",
              "width": "small",
            },
            Object {
              "id": "switch",
              "title": "Switch - Prefilld",
              "type": "switch",
              "value": true,
              "width": "small",
            },
            Object {
              "id": "switch-1",
              "isDisabled": true,
              "title": "Switch - Disabled",
              "type": "switch",
              "width": "small",
            },
          ],
          "group": true,
          "id": "switches",
          "title": "Form - Switches, Radio Buttons and Checkboxes",
        },
      ]
    }
    onSubmit={[Function]}
  />
</Router>
`;

exports[`renders correctly with content 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "key": "x2xfzv",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "key": "x2xfzv",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Form
    data={
      Object {
        "id": Object {
          "value": "test-id",
        },
        "text": Object {
          "value": "prefilled text-field",
        },
      }
    }
    form={
      Array [
        Object {
          "data": Array [
            Object {
              "id": "text",
              "isRequired": true,
              "title": "Text Field",
              "type": "text",
              "width": "small",
            },
            Object {
              "id": "select.first",
              "isRequired": true,
              "options": Array [
                "Foo",
                "Bar",
                "Baz",
              ],
              "title": "Select",
              "type": "select",
              "width": "small",
            },
            Object {
              "id": "select.second",
              "isRequired": true,
              "options": Array [
                "Foo",
                "Bar",
                "Baz",
              ],
              "title": "Select",
              "type": "select",
              "width": "small",
            },
            Object {
              "id": "number",
              "isRequired": true,
              "title": "Number",
              "type": "number",
              "value": 10,
              "width": "small",
            },
            Object {
              "id": "multiline",
              "rows": 5,
              "title": "Multiline",
              "type": "multiline",
            },
            Object {
              "data": Array [
                Object {
                  "iconEnd": <Memo(VisibilityIcon) />,
                  "id": "nested-text",
                  "title": "Nested Text",
                  "type": "text",
                  "width": "mid",
                },
                Object {
                  "id": "empty",
                  "type": "empty",
                  "width": "mid",
                },
              ],
              "group": true,
              "id": "nested",
              "integrated": true,
              "isVisible": true,
              "title": "Nested Form",
            },
            Object {
              "content": <React.Fragment>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  Content
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Divider)) />
              </React.Fragment>,
              "id": "content",
              "type": "content",
            },
            Object {
              "id": "email",
              "onBeforeSubmit": [Function],
              "title": "Email",
              "type": "email",
              "width": "mid",
            },
            Object {
              "id": "password",
              "title": "Password",
              "type": "password",
              "width": "mid",
            },
            Object {
              "helperText": "Should be URL with trailing slash",
              "id": "url",
              "title": "URL",
              "type": "url",
              "validators": Array [
                Object {
                  "message": "Please add a trailing slash to your URL",
                  "validator": [Function],
                },
              ],
              "width": "mid",
            },
            Object {
              "id": "empty",
              "type": "email",
              "width": "mid",
            },
          ],
          "group": true,
          "id": "base",
          "title": "Form",
        },
        Object {
          "data": Array [
            Object {
              "format": "DD.MM.YYYY",
              "id": "date",
              "title": "Date",
              "type": "date",
              "validators": Array [
                "date",
              ],
              "value": 1514989682669,
              "width": "small",
            },
            Object {
              "format": "hh:mm a",
              "id": "time",
              "title": "Time",
              "type": "time",
              "validators": Array [
                "date",
              ],
              "value": 1514989682669,
              "width": "small",
            },
            Object {
              "format": "DD.MM.YYYY, hh:mm a",
              "id": "datetime",
              "title": "Datetime",
              "type": "datetime",
              "validators": Array [
                "date",
              ],
              "value": 1514989682669,
              "width": "small",
            },
          ],
          "group": true,
          "id": "date",
          "title": "Form - Date",
        },
        Object {
          "data": Array [
            Object {
              "id": "disabled",
              "isDisabled": true,
              "title": "Disabled Text",
              "type": "text",
              "width": "mid",
            },
            Object {
              "id": "disabled-select",
              "isDisabled": true,
              "options": Array [
                "Foo",
                "Bar",
                "Baz",
              ],
              "title": "Disabled Select",
              "type": "select",
              "width": "mid",
            },
          ],
          "group": true,
          "id": "disabled",
          "title": "Form - Disabled fields",
        },
        Object {
          "data": Array [
            Object {
              "helperText": "Display Helper Text",
              "id": "switch",
              "title": "Switch",
              "type": "switch",
              "width": "small",
            },
            Object {
              "id": "switch",
              "title": "Switch - Prefilld",
              "type": "switch",
              "value": true,
              "width": "small",
            },
            Object {
              "id": "switch-1",
              "isDisabled": true,
              "title": "Switch - Disabled",
              "type": "switch",
              "width": "small",
            },
          ],
          "group": true,
          "id": "switches",
          "title": "Form - Switches, Radio Buttons and Checkboxes",
        },
      ]
    }
    onSubmit={[Function]}
    submitText="Save the form"
  >
    <p>
      Foo
    </p>
  </Form>
</Router>
`;
