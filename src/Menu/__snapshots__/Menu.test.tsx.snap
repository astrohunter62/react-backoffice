// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<WithStyles(Menu)
  data={
    Array [
      Object {
        "icon": <UNDEFINED />,
        "title": "Title",
        "type": "link",
        "url": "/",
      },
    ]
  }
  redirectTo={[Function]}
>
  <Menu
    classes={
      Object {
        "root": "Menu-root-1",
      }
    }
    data={
      Array [
        Object {
          "icon": <UNDEFINED />,
          "title": "Title",
          "type": "link",
          "url": "/",
        },
      ]
    }
    redirectTo={[Function]}
  >
    <div
      className="Menu-root-1"
    >
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <WithStyles(MenuItem)
              icon={<UNDEFINED />}
              key="menu-0"
              redirectTo={[Function]}
              title="Title"
              url="/"
            >
              <MenuItem
                classes={
                  Object {
                    "isDisabled": "MenuItem-isDisabled-6",
                  }
                }
                icon={<UNDEFINED />}
                isDisabled={false}
                redirectTo={[Function]}
                title="Title"
                url="/"
              >
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className=""
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className=""
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <WithStyles(ForwardRef(ListItemIcon))
                            key=".0"
                          >
                            <ForwardRef(ListItemIcon)
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                  "root": "MuiListItemIcon-root",
                                }
                              }
                            >
                              <div
                                className="MuiListItemIcon-root"
                              >
                                <ForwardRef>
                                  <WithStyles(ForwardRef(SvgIcon))>
                                    <ForwardRef(SvgIcon)
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                          "colorError": "MuiSvgIcon-colorError",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                          "root": "MuiSvgIcon-root",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
                                        />
                                      </svg>
                                    </ForwardRef(SvgIcon)>
                                  </WithStyles(ForwardRef(SvgIcon))>
                                </ForwardRef>
                              </div>
                            </ForwardRef(ListItemIcon)>
                          </WithStyles(ForwardRef(ListItemIcon))>
                          <WithStyles(ForwardRef(ListItemText))
                            key=".1"
                            primary="Title"
                          >
                            <ForwardRef(ListItemText)
                              classes={
                                Object {
                                  "dense": "MuiListItemText-dense",
                                  "inset": "MuiListItemText-inset",
                                  "multiline": "MuiListItemText-multiline",
                                  "primary": "MuiListItemText-primary",
                                  "root": "MuiListItemText-root",
                                  "secondary": "MuiListItemText-secondary",
                                }
                              }
                              primary="Title"
                            >
                              <div
                                className="MuiListItemText-root"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiListItemText-primary"
                                  component="span"
                                  display="block"
                                  variant="body1"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiListItemText-primary"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                    display="block"
                                    variant="body1"
                                  >
                                    <span
                                      className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                    >
                                      Title
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </ForwardRef(ListItemText)>
                          </WithStyles(ForwardRef(ListItemText))>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </MenuItem>
            </WithStyles(MenuItem)>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </div>
  </Menu>
</WithStyles(Menu)>
`;
